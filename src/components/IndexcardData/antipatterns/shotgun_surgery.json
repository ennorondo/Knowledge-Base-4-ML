{
    "antiPatterns": [
        {
            "name": "Shotgun Surgery",
            "aliases": [
                ""
            ],
            "description": "This smell is evident when you must change lots of pieces of code in different places simply to add a new or extended piece of behavior.",
            "context": "",
            "detection": "",
            "consequences": "",
            "cause": "A single responsibility has been split up among a large number of classes. This can happen after overzealous application of Divergent Change.",
            "solution": "Use Move Method and Move Field to move existing class behaviors into a single class. If there's no class appropriate for this, create a new one. If moving code to the same class leaves the original classes almost empty, try to get rid of these now-redundant classes via Inline Class.",
            "example": "",
            "sources": [
                "@book{Fowler, title={Refactoring: improving the design of existing code}, author={Fowler, Martin}, year={2018}, publisher={Addison-Wesley Professional}}",
                "@book{Wake, author = {Wake, William C.}, title = {Refactoring Workbook}, year = {2003}, isbn = {0321109295}, edition = {1}, publisher = {Addison-Wesley Longman Publishing Co., Inc.}, address = {Boston, MA, USA}}",
                "@article{Mantyla, author = {Mäntylä, Mika V. and Lassenius, Casper}, title = {Subjective Evaluation of Software Evolvability Using Code Smells: An Empirical Study}, journal = {Empirical Software Engineering}, issue_date = {September 2006}, volume = {11}, number = {3}, month = sep, year = {2006}, issn = {1382-3256}, pages = {395--431}, numpages = {37}, url = {http://dx.doi.org/10.1007/s10664-006-9002-8}, doi = {10.1007/s10664-006-9002-8}, acmid = {1146489}, publisher = {Kluwer Academic Publishers}, address = {Hingham, MA, USA}, keywords = {Code metrics, Code smells, Evolvability, Human factors, Maintainability, Perceived evaluation, Software metrics, Subjective evaluation}}",
                "@online{RefactoringGuru-Refactoring, author = {Shvets, Alexander}, title = {Refactoring: clean your code}, date = {2014/2019}, url = {https://refactoring.guru/refactoring}, urldate = {2019-04-24}}",
                "@online{Codinghorror, author = {Atwood, Jeff}, title = {Code Smells}, date = {2006-05-18}, url = {https://blog.codinghorror.com/code-smells/}, urldate = {2019-04-24}}"
            ],
            "tags": [
                "soa",
                "microservices",
                "application",
                "The Change Preventers",
                "between classes"
            ],
            "relatedItems": [
                {
                    "relation": "relates",
                    "name": "Multifaceted Abstraction"
                },
                {
                    "relation": "relates",
                    "name": "Parallel Inheritance Hierarchies"
                }
            ]
        }
    ]
}
