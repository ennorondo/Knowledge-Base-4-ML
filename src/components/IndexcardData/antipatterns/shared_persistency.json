{
  "antiPatterns": [
    {
      "name": "Shared Persistency",
      "aliases": [
        "Data Ownership"
      ],
      "description": "Different services access the same database. In the worst case, different services access the same entities of the same schema.",
      "context": "The implementation of Microservices usually follows a \"share nothing\" philosophy. This is especially relevant for clear data ownership. Each data collection or schema usually belongs to exactly one service. The only allowed access to this data is via the interface of this service.",
      "detection": "",
      "consequences": "This smell highly couples the microservices connected to the same data, reducing team and service independence.",
      "cause": "",
      "solution": "Possible solutions are to use independent databases for each service, to use a shared database with a set of private tables for each service that can be accessed by only that service, or to use a private database schema for each service.",
      "example": "",
      "sources": [
        "@article{taibi2018definition, title={On the Definition of Microservice Bad Smells}, author={Taibi, Davide and Lenarduzzi, Valentina}, journal={IEEE software}, volume={35}, number={3}, pages={56--62}, year={2018}, publisher={IEEE}, doi={10.1109/ms.2018.2141031}}"
      ],
      "tags": [
        "microservices",
        "architecture",
        "data_management",
        "The Couplers"
      ],
      "relatedItems": [
        {
          "relation": "relates",
          "name": "Scattered Parasitic Functionality"
        }
      ]
    }
  ]
}
