{
  "antiPatterns": [
    {
      "name": "Cyclic Dependency",
      "aliases": [
        "Cyclically-dependent Modularization",
        "Cyclic Hierarchy"
      ],
      "description": "This smell arises when two or more abstractions depend on each other directly or indirectly (creating a tight coupling between the abstractions). A cyclic chain of calls between abstractions exists.",
      "context": "A special form of cyclic dependency is sometimes exhibited within an inheritance hierarchy. A subtype has a dependency on its supertype because of the inheritance relationship. However, when the supertype also depends on the subtype (for instance, by having an explicit reference to the subtype), it results in a cyclic dependency.",
      "detection": "Abstractions depend on each other in a cyclic interaction pattern, e.g. A calls B, B calls C, and C calls back A.",
      "consequences": "Abstractions involved in a cyclic dependency can be harder to maintain or reuse.",
      "cause": "Passing self-references or using call-backs. Hard to visualize indirect dependencies.",
      "solution": "Resolve the cycles by e.g. relocating functionality (merging) or use an intermediary like the API Gateway pattern.",
      "example": "A depends on B, B on C and C on A",
      "sources": [
        "@article{taibi2018definition, title={On the Definition of Microservice Bad Smells}, author={Taibi, Davide and Lenarduzzi, Valentina}, journal={IEEE software}, volume={35}, number={3}, pages={56--62}, year={2018}, publisher={IEEE}, doi={10.1109/ms.2018.2141031}}",
        "@book{Suryanarayana, author = {Suryanarayana, Girish and Samarthyam, Ganesh and Sharma, Tushar}, title = {Refactoring for Software Design Smells: Managing Technical Debt}, year = {2014}, isbn = {0128013974,\newline 9780128013977}, edition = {1st}, publisher = {Morgan Kaufmann Publishers Inc.}, address = {San Francisco, CA, USA}}",
        "@book{Martin, author = {Martin, Robert C.}, title = {Clean Code: A Handbook of Agile Software Craftsmanship}, year = {2008}, isbn = {0132350882, 9780132350884}, edition = {1}, publisher = {Prentice Hall PTR}, address = {Upper Saddle River, NJ, USA}}",
        "@book{Lippert, title={Refactoring in large software projects: performing complex restructurings successfully}, author={Lippert, Martin and Roock, Stephen}, year={2006}, publisher={John Wiley & Sons}}"
      ],
      "tags": [
        "soa",
        "microservices",
        "architecture",
        "The Couplers",
        "between classes"
      ],
      "relatedItems": [
        {
          "relation": "relates",
          "name": "Chatty Service"
        },
        {
          "relation": "relates",
          "name": "Nanoservices"
        },
        {
          "relation": "relates",
          "name": "Message Chain"
        }
      ]
    }
  ]
}
