{
  "antiPatterns": [
    {
      "name": "Sand Pile",
      "aliases": [
        ""
      ],
      "description": "An SOA is implemented with one elementary service per software component resulting in many small software components that are sharing data.",
      "context": "",
      "detection": "Many small software components exist that share data.",
      "consequences": "The large amount of small software components may cause inefficiencies and maintenance problems.",
      "cause": "Sand Pile may be caused by a wrong grouping of \"atomic\" capabilities.",
      "solution": "Regroup related elementary services into one software component with a common interface.",
      "example": "Many highly specialized car service workshops are working separately. It is not an enterprise that provides all car repair services at one spot.",
      "sources": [
        "@inproceedings{kral2007most,author={Kral, Jaroslav and Zemlicka, Michal},booktitle={International Conference on Software Engineering Advances (ICSEA 2007)},title={The Most Important Service-Oriented Antipatterns},year={2007},pages={29--29},doi={10.1109/ICSEA.2007.74},month={Aug}}",
        "@inproceedings{palma2015study, title={A study on the taxonomy of service antipatterns}, author={Palma, Francis and Mohay, Naouel}, booktitle={Patterns Promotion and Anti-patterns Prevention (PPAP), 2015 IEEE 2nd Workshop on}, pages={5--8}, year={2015}, doi={10.1109/PPAP.2015.7076848}}"
      ],
      "tags": [
        "soa",
        "architecture",
        "cohesion",
        "The Couplers"
      ],
      "relatedItems": [
        {
          "relation": "follows",
          "name": "Nanoservices"
        }
      ]
    }
  ]
}
