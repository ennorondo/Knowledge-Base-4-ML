{
  "antiPatterns": [
    {
      "name": "API Versioning",
      "aliases": [
        "Static Contract Pitfall"
      ],
      "description": "A lack of semantically consistent versions of APIs (e.g. v1.1, v1.2, etc.) or poor versioning in general.",
      "context": "The version is the first hint at different behaviors or changed functionality.",
      "detection": "",
      "consequences": "In case of updates to non-semantically versioned APIs, consumers may face breaking changes. For example, returned data may be different or may need to be called differently.",
      "cause": "",
      "solution": "APIs need to be semantically versioned to allow services to know whether they are communicating with the correct version or whether they need to adapt their communication to a new contract.",
      "example": "API release v1, then release v3",
      "sources": [
        "@article{taibi2018definition, title={On the Definition of Microservice Bad Smells}, author={Taibi, Davide and Lenarduzzi, Valentina}, journal={IEEE software}, volume={35}, number={3}, pages={56--62}, year={2018}, publisher={IEEE}, doi={10.1109/ms.2018.2141031}}"
      ],
      "tags": [
        "microservices",
        "soa",
        "application",
        "ambiguity"
      ],
      "relatedItems": []
    }
  ]
}
